{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf130
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\ri0\sl259\slmult1\sa160\partightenfactor0

\f0\fs22 \cf0 Programming Exercise #10\
(Safe Arrays) In C++, there is no check to determine whether the array index is out of bounds. During program execution, an out-of-bound array index can cause serious problems. Also, recall that in C++ the array index starts at 0. \
Design a class safeArray that solves the out-of-bound array index problem and allows the user to begin the array index starting at any integer, positive or negative. Every object of type safeArray should be an array of type int. During execution, when accessing an array component, if the index is out of bounds, the program must terminate with an appropriate error message. For example, \
safeArray list(2,13); \
safeArray yourList(-5,9); \
In this example, list is an array of 11 components, the component type is int, and the components are list[2], list[3], ..., list[12]. Also, yourList is an array of 15 components, the component type is int, and the components are yourList[-5], yourlist[-4], ..., yourList[0], ..., yourList[8].}